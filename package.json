{
  "name": "pluto",
  "productName": "pluto",
  "version": "0.1.1",
  "license": "apache",
  "main": "public/electron.js",
  "author": "Pluto Dev Team <plutoapp.devs@gmail.com>",
  "email": "plutoapp.devs@gmail.com",
  "description": "Virtual Office App for Organizations",
  "repository": "github:Pluto-App/pluto-desktop-releases",
  "dependencies": {
    "agora-rtc-sdk": "^3.6.0",
    "agora-rtm-sdk": "^1.4.3",
    "axios": "^0.21.1",
    "axios-progress-bar": "^1.2.0",
    "chart.js": "^3.3.2",
    "electron-is-dev": "^1.2.0",
    "electron-log": "^4.3.1",
    "electron-updater": "^4.3.5",
    "electron-util": "^0.16.0",
    "ffi-napi": "^4.0.3",
    "iconv": "^3.0.0",
    "js-cookie": "^2.2.1",
    "lodash": "^4.17.21",
    "node-window-manager": "^2.2.4",
    "overmind": "^23.1.0",
    "overmind-react": "^24.1.0",
    "qs": "^6.9.7",
    "react": "^16.13.1",
    "react-chartjs-2": "^3.0.3",
    "react-dom": "^16.13.1",
    "react-hot-loader": "^4.12.21",
    "react-router-dom": "^5.2.0",
    "react-scripts": "^4.0.3",
    "react-toastify": "^6.0.6",
    "react-tooltip": "^4.2.13",
    "ref-struct-napi": "^1.1.1",
    "ref-wchar-napi": "^1.0.3",
    "robotjs": "github:octalmage/robotjs#master",
    "run-applescript": "^4.0.0",
    "socket.io-client": "^2.3.1",
    "styled-components": "^5.3.0",
    "tailwindcss": "^1.4.6",
    "url": "^0.11.0",
    "use-sound": "^2.1.0"
  },
  "homepage": "./",
  "build": {
    "appId": "com.pluto.office",
    "compression": "normal",
    "productName": "Pluto",
    "copyright": "MIT",
    "afterSign": "src/scripts/notarize.js",
    "extraResources": [
      "src/dlls",
      "src/bin"
    ],
    "files": [
      "build/**/*",
      "node_modules/**/*",
      "assets/**/*"
    ],
    "directories": {
      "buildResources": "assets/**/*",
      "output": "dist"
    },
    "mac": {
      "icon": "./assets/macos/logo.icns",
      "category": "public.app-category.business",
      "entitlements": "./assets/entitlements.mac.plist",
      "entitlementsInherit": "./assets/entitlements.mac.plist",
      "hardenedRuntime": true,
      "gatekeeperAssess": false,
      "extendInfo": {
        "NSAppTransportSecurity": {
          "NSAllowsArbitraryLoads": true
        },
        "NSCameraUsageDescription": "Pluto requires camera access to facilitate video calls.",
        "NSMicrophoneUsageDescription": "Pluto requires microphone access to facilitate audio calls."
      },
      "publish": {
        "provider": "github",
        "releaseType": "release"
      },
      "target": [
        "dmg",
        "zip"
      ]
    },
    "dmg": {
      "internetEnabled": true,
      "sign": false,
      "title": "${productName}_mac_${version}",
      "contents": [
        {
          "x": 110,
          "y": 150
        },
        {
          "x": 440,
          "y": 150,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "portable",
          "arch": [
            "x64"
          ]
        }
      ],
      "icon": "./assets/windows/logo.ico",
      "publish": {
        "provider": "github",
        "releaseType": "release"
      }
    },
    "linux": {
      "icon": "./assets/logo.png",
      "target": [
        "deb",
        "snap",
        "rpm"
      ],
      "description": "Virtual Office App for Organizations",
      "category": "office",
      "publish": {
        "provider": "github",
        "releaseType": "release"
      }
    }
  },
  "scripts": {
    "rebuild-robot": "npm rebuild --runtime=electron --target=11.1.1 --disturl=https://atom.io/download/atom-shell --abi=85",
    "rebuild": "electron-rebuild",
    "build:style": "tailwind build src/styles/index.css -c tailwind.config.js -o src/styles/tailwind.css",
    "test": "env-cmd -f .env react-scripts test",
    "eject": "env-cmd -f .env react-scripts eject",
    "postinstall": "electron-builder install-app-deps",
    "setup": "npm install && npm run build",
    "build-production": "npm run build:style && cross-env BROWSER=none env-cmd -f .env.prod react-scripts start",
    "build-development": "npm run build:style && cross-env BROWSER=none env-cmd -f .env.dev react-scripts start",
    "build-local": "npm run build:style && cross-env BROWSER=none env-cmd -f .env react-scripts start",
    "electron-local": "cross-env NODE_ENV=dev env-cmd -f .env nodemon --exec electron .",
    "electron-development": "cross-env NODE_ENV=dev env-cmd -f .env.dev nodemon --exec electron .",
    "electron-production": "cross-env NODE_ENV=dev env-cmd -f .env.prod nodemon --exec electron .",
    "local": "concurrently --kill-others \"npm run build-local\" \"cross-env NODE_ENV=production dotenv -e .env -- cross-var wait-on tcp:%PORT% && npm run electron-local \"",
    "dev": "concurrently --kill-others \"npm run build-development\" \"cross-env NODE_ENV=production dotenv -e .env.dev -- cross-var wait-on tcp:%PORT% && npm run electron-development \"",
    "prod": "concurrently --kill-others \"npm run build-production\" \"cross-env NODE_ENV=production dotenv -e .env.prod -- cross-var wait-on tcp:%PORT% && npm run electron-production \"",
    "dev-build": "cross-env NODE_ENV=production && npm run build:style && cross-env BROWSER=none env-cmd -f .env.dev react-scripts build",
    "prod-build": "cross-env NODE_ENV=production && npm run build:style && cross-env BROWSER=none env-cmd -f .env.prod react-scripts build",
    "build": "cross-env NODE_ENV=production && npm run build:style && cross-env BROWSER=none env-cmd -f .env react-scripts build",
    "clean": "rm -rf build/ dist/",
    "mac": "cross-env NODE_ENV=production electron-builder build --mac -c.extraMetadata.main=build/electron.js --publish=never",
    "mac-release": "cross-env NODE_ENV=production electron-builder build --mac -c.extraMetadata.main=build/electron.js --publish=always",
    "linux": "cross-env NODE_ENV=production electron-builder build --linux -c.extraMetadata.main=build/electron.js --publish=always",
    "windows": "cross-env NODE_ENV=production electron-builder build --win -c.extraMetadata.main=build/electron.js --publish=never",
    "windows-release": "cross-env NODE_ENV=production electron-builder build --win -c.extraMetadata.main=build/electron.js --publish=always"
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "engines": {
    "node": ">= 10.0.0",
    "npm": ">= 6.0.0"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "autoprefixer": "^9.8.4",
    "concurrently": "^5.2.0",
    "cross-env": "^7.0.2",
    "cross-var": "1.1.0",
    "dotenv": "^8.2.0",
    "dotenv-cli": "3.0.0",
    "electron": "^11.1.1",
    "electron-builder": "^22.11.1",
    "electron-notarize": "^1.0.0",
    "electron-packager": "^15.2.0",
    "electron-react-devtools": "^0.5.3",
    "electron-rebuild": "^2.3.5",
    "electron-reload": "^1.5.0",
    "env-cmd": "^10.1.0",
    "nodemon": "^2.0.4",
    "wait-on": "^4.0.2"
  }
}
